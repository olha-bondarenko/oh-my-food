{"ast":null,"code":"/**\n * @license Angular v14.0.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, DefaultTitleStrategy, TitleStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\n\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction isUrlHandlingStrategy(opts) {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing. Only used internally to keep the factory that's\n * marked as publicApi cleaner (i.e. not having _both_ `TitleStrategy` and `DefaultTitleStrategy`).\n */\n\n\nfunction setupTestingRouterInternal(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, defaultTitleStrategy, titleStrategy) {\n  return setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy ?? defaultTitleStrategy);\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\n\n\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy) {\n  const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n      ɵassignExtraOptionsToRouter(opts, router);\n    }\n  }\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  router.titleStrategy = titleStrategy;\n  return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\n\n\nclass RouterTestingModule {\n  static withRoutes(routes, config) {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [provideRoutes(routes), {\n        provide: ROUTER_CONFIGURATION,\n        useValue: config ? config : {}\n      }]\n    };\n  }\n\n}\n\nRouterTestingModule.ɵfac = function RouterTestingModule_Factory(t) {\n  return new (t || RouterTestingModule)();\n};\n\nRouterTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RouterTestingModule,\n  exports: [RouterModule]\n});\nRouterTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n    provide: Location,\n    useClass: SpyLocation\n  }, {\n    provide: LocationStrategy,\n    useClass: MockLocationStrategy\n  }, {\n    provide: Router,\n    useFactory: setupTestingRouterInternal,\n    deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()], [DefaultTitleStrategy, new Optional()], [TitleStrategy, new Optional()]]\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: NoPreloading\n  }, provideRoutes([])],\n  imports: [RouterModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterTestingModule, [{\n    type: NgModule,\n    args: [{\n      exports: [RouterModule],\n      providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n        provide: Location,\n        useClass: SpyLocation\n      }, {\n        provide: LocationStrategy,\n        useClass: MockLocationStrategy\n      }, {\n        provide: Router,\n        useFactory: setupTestingRouterInternal,\n        deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()], [DefaultTitleStrategy, new Optional()], [TitleStrategy, new Optional()]]\n      }, {\n        provide: PreloadingStrategy,\n        useExisting: NoPreloading\n      }, provideRoutes([])]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\n\n\nvar spy_ng_module_factory_loader = {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter, setupTestingRouterInternal };","map":{"version":3,"names":["Location","LocationStrategy","SpyLocation","MockLocationStrategy","i0","Compiler","Injector","Optional","NgModule","Router","ɵflatten","ɵassignExtraOptionsToRouter","provideRoutes","ROUTER_CONFIGURATION","RouterModule","ɵROUTER_PROVIDERS","UrlSerializer","ChildrenOutletContexts","ROUTES","UrlHandlingStrategy","RouteReuseStrategy","DefaultTitleStrategy","TitleStrategy","PreloadingStrategy","NoPreloading","EXTRA_ROUTER_TESTING_PROVIDERS","isUrlHandlingStrategy","opts","setupTestingRouterInternal","urlSerializer","contexts","location","compiler","injector","routes","urlHandlingStrategy","routeReuseStrategy","defaultTitleStrategy","titleStrategy","setupTestingRouter","router","RouterTestingModule","withRoutes","config","ngModule","providers","provide","useValue","ɵfac","ɵmod","ɵinj","useClass","useFactory","deps","useExisting","type","args","exports","spy_ng_module_factory_loader"],"sources":["/Users/olgabondarenko/Desktop/code/oh-my-food/node_modules/@angular/router/fesm2020/testing.mjs"],"sourcesContent":["/**\n * @license Angular v14.0.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, DefaultTitleStrategy, TitleStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing. Only used internally to keep the factory that's\n * marked as publicApi cleaner (i.e. not having _both_ `TitleStrategy` and `DefaultTitleStrategy`).\n */\nfunction setupTestingRouterInternal(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, defaultTitleStrategy, titleStrategy) {\n    return setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy ?? defaultTitleStrategy);\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            ɵassignExtraOptionsToRouter(opts, router);\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    router.titleStrategy = titleStrategy;\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nclass RouterTestingModule {\n    static withRoutes(routes, config) {\n        return {\n            ngModule: RouterTestingModule,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    }\n}\nRouterTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: RouterTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRouterTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.3\", ngImport: i0, type: RouterTestingModule, exports: [RouterModule] });\nRouterTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: RouterTestingModule, providers: [\n        ɵROUTER_PROVIDERS,\n        EXTRA_ROUTER_TESTING_PROVIDERS,\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy, useClass: MockLocationStrategy },\n        {\n            provide: Router,\n            useFactory: setupTestingRouterInternal,\n            deps: [\n                UrlSerializer,\n                ChildrenOutletContexts,\n                Location,\n                Compiler,\n                Injector,\n                ROUTES,\n                ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new Optional()],\n                [RouteReuseStrategy, new Optional()],\n                [DefaultTitleStrategy, new Optional()],\n                [TitleStrategy, new Optional()],\n            ]\n        },\n        { provide: PreloadingStrategy, useExisting: NoPreloading },\n        provideRoutes([]),\n    ], imports: [RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: RouterTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RouterModule],\n                    providers: [\n                        ɵROUTER_PROVIDERS,\n                        EXTRA_ROUTER_TESTING_PROVIDERS,\n                        { provide: Location, useClass: SpyLocation },\n                        { provide: LocationStrategy, useClass: MockLocationStrategy },\n                        {\n                            provide: Router,\n                            useFactory: setupTestingRouterInternal,\n                            deps: [\n                                UrlSerializer,\n                                ChildrenOutletContexts,\n                                Location,\n                                Compiler,\n                                Injector,\n                                ROUTES,\n                                ROUTER_CONFIGURATION,\n                                [UrlHandlingStrategy, new Optional()],\n                                [RouteReuseStrategy, new Optional()],\n                                [DefaultTitleStrategy, new Optional()],\n                                [TitleStrategy, new Optional()],\n                            ]\n                        },\n                        { provide: PreloadingStrategy, useExisting: NoPreloading },\n                        provideRoutes([]),\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\nvar spy_ng_module_factory_loader = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter, setupTestingRouterInternal };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}